version: '3.8'

services:
  # FastAPI 백엔드 애플리케이션
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    depends_on:
      - db
    restart: always
    environment:
      - SQLALCHEMY_DATABASE_URL=${DATABASE_URL}  # 사용자, 비밀번호, 데이터베이스 이름
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}  # JWT 시크릿키
      - JWT_ALGORITHM=${JWT_ALGORITHM}  # JWT 알고리즘을
      - JWT_ACCESS_TOKEN_EXPIRE_MINUTES=${JWT_ACCESS_TOKEN_EXPIRE_MINUTES}  # 액세스 토큰 만료 시간
      - JWT_REFRESH_TOKEN_EXPIRE_DAYS=${JWT_REFRESH_TOKEN_EXPIRE_DAYS}  # 리프레시 토큰 만료 시간
    networks:
      - app-network

  # MySQL 데이터베이스
  db:
    image: mysql:latest
    ports:
      - "3306:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}  # MySQL 루트 비밀번호를 여기에 입력해야 합니다.
      - MYSQL_DATABASE=${MYSQL_DATABASE}  # 데이터베이스 이름을 여기에 입력해야 합니다.
      - MYSQL_USER=${MYSQL_USER} # MySQL 사용자를 여기에 입력해야 합니다.
      - MYSQL_PASSWORD=${MYSQL_PASSWORD} # MySQL 사용자의 비밀번호를 여기에 입력해야 합니다.
    volumes:
      - db_data:/var/lib/mysql  # MySQL 데이터베이스를 위한 가상 볼륨 설정
    networks:
      - app-network
  # 디비 조회용 GUI    
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    links:
      - db:mysql
    ports:
      - "8001:80"
    environment:
      PMA_HOST: db
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    networks:
      - app-network
  
  # 젠킨스
  jenkins:
    image: jenkins/jenkins:latest
    container_name: jenkins
    ports:
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - jenkins_home:/var/jenkins_home
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  db_data:
  jenkins_home:

